---
- name: Create security groups
  local_action:
    module: ec2_group
    name: "{{ service_name }}-sec"
    description: "Security Group for {{ service_name|capitalize }}"
    region: "{{region}}"
    vpc_id: "{{ vpc_id }}"
    rules: "{{ security_rules }}"
#    - proto: tcp
#      from_port: "{{ item }}"
#      to_port: "{{ item }}"
#      cidr_ip: 0.0.0.0/0
#    with_items: "{{ service_port }}"


- name: Launch instances
  local_action: 
    module: ec2
    key_name: "{{ keypair }}"
    instance_type: "{{ instance_type }}"
    image: "{{ image }}"
    region: "{{ region }}"
    wait: yes
    group: "{{ service_name }}-sec"
    count_tag:
      Group: "{{ tag_ec2_group }}"
    exact_count: "{{ instances_to_lauch }}"
    vpc_subnet_id: "{{ subnets | join(',') }}" # to be specified for MICRO instances
#    instance_tags:
#       Name: "{{ tag_ec2_name }}-{{ tag_ec2_env }}-{{ item.1.msg }}"
#       Env: "{{ tag_ec2_env }}"
#       App: "{{ tag_ec2_app }}" 
#       Group: "{{ tag_ec2_group }}"
#       Current: "{{ tag_ec2_current }}"
  register: ec2

- name: generate sequence id for tagging
  debug: msg="{{ item }}"
  no_log: true
  with_sequence: start="{{ startindex }}" end="{{ instances_to_lauch }}" format=%02d
  register: sequence

- name: tag instances
  no_log: true
  ec2_tag:
    region: "{{ region }}"
    resource: "{{ item.0.id }}"
    tags:
      Name: "{{ tag_ec2_name }}-{{ tag_ec2_env }}-{{ item.1.msg }}"
      Env: "{{ tag_ec2_env }}"
      Group: "{{ tag_ec2_group }}"
      App: "{{ tag_ec2_app }}"
      Current: "{{ tag_ec2_current }}"
  with_together:
        - "{{ ec2.tagged_instances }}"
        - "{{ sequence.results }}"


- name: dispaly var
  debug: var=ec2

- name: Add new instance to {{ service_name }} host group
  local_action: add_host hostname={{ item.public_ip }} groupname={{ service_group }}
  with_items: "{{ ec2.tagged_instances }}"

- name: Wait for SSH to come up
  local_action: wait_for host={{ item.public_dns_name }} port=22 delay=30 timeout=50 state=started
  with_items: "{{ ec2.tagged_instances }}"

- name: Add the newly created EC2 instance(s) to host variable file
  lineinfile: dest={{ varpath }}
              regexp={{ tag_ec2_name }}-{{ tag_ec2_env }}-{{ item.1.msg }}
              insertafter="[webserver]"
              line="{{ tag_ec2_name }}-{{ tag_ec2_env }}-{{ item.1.msg }}={{ item.public_ip }}"
              state=present
  with_together:
        - "{{ ec2.tagged_instances }}"
        - "{{ sequence.results }}"

